>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> bg = BaseGeometry()
>>> bg.integer_validator("my_int", 12)
>>> bg.integer_validator("width", 89)
>>> try:
...	bg.integer_validator("name", "John")
... except Exception as e:
...	print("[{}] {}".format(e.__class__.__name__, e))
[TypeError] name must be an integer
>>> del bg
>>> bg = BaseGeometry()
>>> try:
...	bg.integer_validator("age", 0)
... except Exception as e:
...	print("[{}] {}".format(e.__class__.__name__, e))
[ValueError] age must be greater than 0
>>> del bg
>>> bg = BaseGeometry()
>>> try:
...	bg.integer_validator("distance", -4)
... except Exception as e:
...	print("[{}] {}".format(e.__class__.__name__, e))
[ValueError] distance must be greater than 0
>>> del bg
>>> bg = BaseGeometry()
>>> bg.integer_validator("height", 25)
>>> bg.integer_validator("day", 2)
>>> bg.integer_validator("footsize", 10)
>>> try:
...	bg.integer_validator("perimeter", "None")
... except Exception as e:
...	print("[{}] {}".format(e.__class__.__name__, e))
[TypeError] perimeter must be an integer
